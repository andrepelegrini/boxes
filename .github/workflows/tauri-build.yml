# .github/workflows/tauri-build.yml
name: Build desktop installers

# ← PERMISSÕES NECESSÁRIAS p/ ler os artifacts do run anterior
permissions:
  actions: read
  contents: read

on:
  workflow_run:
    workflows: ["Build micro-service binaries (macOS-Linux-Windows)"]
    types: [completed]

jobs:
  tauri:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: 📥 Checkout source
        uses: actions/checkout@v4

      - name: ⬇️ Download sidecar artifacts
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          path: sidecars
          if-no-files-found: error      # ❶ força erro e mostra log se não baixar nada
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🗂️ List downloaded files (debug)
        run: |
          echo "Artifacts baixados:"
          ls -R sidecars || echo "nenhum artefato encontrado"

      - name: 🚚 Move sidecars to src-tauri/bin
        run: |
          mkdir -p src-tauri/bin
          find sidecars -type f -name "*-${{ runner.os }}*" -exec mv {} src-tauri/bin/ \;
          chmod +x src-tauri/bin/* || true

      - name: ⚙️ Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: 🛠️ Install Linux build deps
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository -y universe
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config curl \
            libssl-dev libgtk-3-dev libglib2.0-dev \
            librsvg2-dev libayatana-appindicator3-dev \
            # WebKitGTK (tenta 4.0 e, se não existir, 4.1)
            libwebkit2gtk-4.0-dev || sudo apt-get install -y libwebkit2gtk-4.1-dev
          rustup target add x86_64-unknown-linux-gnu

      - name: 🛠️ Build front-end
        run: |
          npm ci
          npm run build

      - name: 🛠️ Build Tauri app
        uses: tauri-apps/tauri-action@v0.4
        with:
          args: >
            --target ${{ fromJSON('{
              "macos-latest":"universal-apple-darwin",
              "ubuntu-latest":"x86_64-unknown-linux-gnu",
              "windows-latest":"x86_64-pc-windows-msvc"
            }')[matrix.os] }}
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}